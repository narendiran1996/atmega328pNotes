\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+c1}{// MOde of operation to CTC Mode \PYGZhy{}\PYGZhy{} WGM0[2:0] === 010}
\PYG{c+c1}{// WGM0[2](bit3) from TCCR0B, WGM0[1](bit1)  from TCCR0A, WGM0[0](bit0)  from TCCR0A}
\PYG{n}{TCCR0A} \PYG{o}{=} \PYG{n}{TCCR0A} \PYG{o}{\PYGZam{}} \PYG{o}{\PYGZti{}}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{l+m+mi}{0}\PYG{p}{);}
\PYG{n}{TCCR0A} \PYG{o}{=} \PYG{n}{TCCR0A} \PYG{o}{|} \PYG{p}{(}\PYG{l+m+mi}{1}\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{l+m+mi}{1}\PYG{p}{);}
\PYG{n}{TCCR0B} \PYG{o}{=} \PYG{n}{TCCR0B} \PYG{o}{\PYGZam{}} \PYG{o}{\PYGZti{}}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{l+m+mi}{3}\PYG{p}{);}

\PYG{c+cm}{/* What to do when timer reaches the OCR0A */}
\PYG{c+c1}{// toggle OC0A on each time when reaches the OCR0A}
\PYG{c+c1}{// which is reflected in PD6}
\PYG{c+c1}{// Output OC0A to toglle when reaches MAX \PYGZhy{}\PYGZhy{} COM0A[1:0] === 01}
\PYG{c+c1}{// COM0A[1](bit7) from TCCR0A, COM0A[0](bit6) from TCCR0A}
\PYG{n}{TCCR0A} \PYG{o}{=} \PYG{n}{TCCR0A} \PYG{o}{\PYGZam{}} \PYG{o}{\PYGZti{}}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{l+m+mi}{7}\PYG{p}{);}
\PYG{n}{TCCR0A} \PYG{o}{=} \PYG{n}{TCCR0A} \PYG{o}{|} \PYG{p}{(}\PYG{l+m+mi}{1}\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{l+m+mi}{6}\PYG{p}{);}

\PYG{c+c1}{// Output OC0B to toglle when reaches MAX \PYGZhy{}\PYGZhy{} COM0B1:0] === 01}
\PYG{c+c1}{// COM0B[1](bit7) from TCCR0A, COM0B[0](bit6) from TCCR0A}
\PYG{n}{TCCR0A} \PYG{o}{=} \PYG{n}{TCCR0A} \PYG{o}{\PYGZam{}} \PYG{o}{\PYGZti{}}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{l+m+mi}{5}\PYG{p}{);}
\PYG{n}{TCCR0A} \PYG{o}{=} \PYG{n}{TCCR0A} \PYG{o}{|} \PYG{p}{(}\PYG{l+m+mi}{1}\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{l+m+mi}{4}\PYG{p}{);}


\PYG{c+c1}{// Enable Interrupt when counter matches OCR0A Rgister}
\PYG{c+c1}{//  OCIE0A bit is enabled}
\PYG{n}{TIMSK0} \PYG{o}{=} \PYG{n}{TIMSK0} \PYG{o}{|} \PYG{p}{(}\PYG{l+m+mi}{1}\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{l+m+mi}{1}\PYG{p}{);}


\PYG{c+c1}{// setting the value till the counter should reach in OCR0A}
\PYG{c+c1}{// for toggling of OC0A pin}
\PYG{n}{OCR0A} \PYG{o}{=} \PYG{l+m+mh}{0x32}\PYG{p}{;}

\PYG{c+c1}{// start timer by setting the clock prescalar}
\PYG{c+c1}{// DIVIDE BY 8 from I/O clock}
\PYG{c+c1}{// DIVIDE BY 8\PYGZhy{}\PYGZhy{} CS0[2:0] === 010}
\PYG{c+c1}{// CS0[2](bit2) from TCCR0B,CS0[1](bit1) from TCCR0B,CS0[0](bit0) from TCCR0B}
\PYG{n}{TCCR0B} \PYG{o}{=} \PYG{n}{TCCR0B} \PYG{o}{|} \PYG{p}{(}\PYG{l+m+mi}{1}\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{l+m+mi}{1}\PYG{p}{);}
\PYG{n}{TCCR0B} \PYG{o}{=} \PYG{n}{TCCR0B} \PYG{o}{\PYGZam{}} \PYG{p}{(}\PYG{o}{\PYGZti{}}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{l+m+mi}{0}\PYG{p}{)} \PYG{o}{\PYGZam{}} \PYG{o}{\PYGZti{}}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{l+m+mi}{2}\PYG{p}{));}

\PYG{c+c1}{// enabling global interrupt}
\PYG{n}{sei}\PYG{p}{();}
\PYG{c+c1}{// SO ON TIME = (1 + OCR0A) / (F\PYGZus{}CPU / PRESCALAR)}
\PYG{c+c1}{// ON TIME = 0X32 / (16000000/8) = 25.5us}
\PYG{c+c1}{// since symmetric as toggling OFF TIME = 25.5us}
\PYG{c+c1}{// hence, we get a square wave of fequency 1 / 50us = 20kHz}
\end{Verbatim}
