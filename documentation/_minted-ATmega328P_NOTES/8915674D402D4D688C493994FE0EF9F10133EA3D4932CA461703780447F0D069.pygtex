\begin{Verbatim}[commandchars=\\\{\}]
\PYG{k+kt}{uint8\PYGZus{}t} \PYG{n}{status} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
\PYG{k+kt}{void} \PYG{n+nf}{I2C\PYGZus{}Master\PYGZus{}Init}\PYG{p}{()}
\PYG{p}{\PYGZob{}}
	\PYG{c+c1}{// Intialize the I2C clock frequency to 100kHz}
	\PYG{c+c1}{// let the prescalr be 1}
	\PYG{c+c1}{// f\PYGZus{}i2c =  F\PYGZus{}CPU / (16 + (2*xTWBR*Prescaler)) = 32}
	\PYG{c+c1}{// setting the TWBR register.}
	\PYG{n}{TWBR} \PYG{o}{=} \PYG{l+m+mi}{32}\PYG{p}{;}

	\PYG{c+c1}{// writing 1 to prscalre}
	\PYG{c+c1}{// setting the TWPS bits in TWSR to 00}
	\PYG{n}{TWSR} \PYG{o}{\PYGZam{}=} \PYG{o}{\PYGZti{}}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{n}{TWPS0}\PYG{p}{);}
	\PYG{n}{TWSR} \PYG{o}{\PYGZam{}=} \PYG{o}{\PYGZti{}}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{n}{TWPS1}\PYG{p}{);}
\PYG{p}{\PYGZcb{}}
\PYG{k+kt}{uint8\PYGZus{}t} \PYG{n+nf}{I2C\PYGZus{}Master\PYGZus{}Status}\PYG{p}{()}
\PYG{p}{\PYGZob{}}
	\PYG{c+c1}{// Status value are available from TWSR[7:3]}
	\PYG{k}{return} \PYG{n}{TWSR} \PYG{o}{\PYGZam{}} \PYG{l+m+mi}{0}\PYG{n}{XF8}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}
\PYG{k+kt}{uint8\PYGZus{}t} \PYG{n+nf}{I2C\PYGZus{}Master\PYGZus{}START}\PYG{p}{()}
\PYG{p}{\PYGZob{}}
	\PYG{c+c1}{// Enabling the TWI interface}
	\PYG{n}{TWCR} \PYG{o}{|=} \PYG{p}{(}\PYG{l+m+mi}{1}\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{n}{TWEN}\PYG{p}{);}
	\PYG{c+c1}{// sending START condition}
	\PYG{n}{TWCR} \PYG{o}{|=} \PYG{p}{(}\PYG{l+m+mi}{1}\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{n}{TWSTA}\PYG{p}{);}
	\PYG{c+c1}{// Do the transaction}
	\PYG{n}{TWCR} \PYG{o}{|=} \PYG{p}{(}\PYG{l+m+mi}{1}\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{n}{TWINT}\PYG{p}{);}
	\PYG{c+c1}{// Checking if START condition is sent correctly}
	\PYG{k}{while}\PYG{p}{((}\PYG{n}{TWCR} \PYG{o}{\PYGZam{}} \PYG{p}{(}\PYG{l+m+mi}{1}\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{n}{TWINT} \PYG{p}{))} \PYG{o}{==} \PYG{l+m+mh}{0x00}\PYG{p}{);}
	\PYG{n}{status} \PYG{o}{=} \PYG{n}{I2C\PYGZus{}Master\PYGZus{}Status}\PYG{p}{();}
	\PYG{c+c1}{// checking status if START condition is sent correctily}
	\PYG{k}{if}\PYG{p}{(}\PYG{n}{status} \PYG{o}{==} \PYG{l+m+mh}{0x08}\PYG{p}{)}
	\PYG{p}{\PYGZob{}}
		\PYG{c+c1}{// no error occured}
		\PYG{k}{return} \PYG{l+m+mi}{0}\PYG{p}{;}
	\PYG{p}{\PYGZcb{}}
	\PYG{k}{else}
	\PYG{p}{\PYGZob{}}
		\PYG{c+c1}{// error occured}
		\PYG{k}{return} \PYG{l+m+mi}{0}\PYG{p}{;}
	\PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{}}
\PYG{k+kt}{uint8\PYGZus{}t} \PYG{n+nf}{I2C\PYGZus{}Master\PYGZus{}STOP}\PYG{p}{()}
\PYG{p}{\PYGZob{}}
	\PYG{c+c1}{// Removing Start condition on bit}
	\PYG{n}{TWCR} \PYG{o}{\PYGZam{}=} \PYG{o}{\PYGZti{}}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{n}{TWSTA}\PYG{p}{);}
	\PYG{c+c1}{// sending STOP condition}
	\PYG{n}{TWCR} \PYG{o}{|=} \PYG{p}{(}\PYG{l+m+mi}{1}\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{n}{TWSTO}\PYG{p}{);}
	
	\PYG{c+c1}{// Do the transaction}
	\PYG{n}{TWCR} \PYG{o}{|=} \PYG{p}{(}\PYG{l+m+mi}{1}\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{n}{TWINT}\PYG{p}{);}

	\PYG{c+c1}{// disaabling stop and interface}
	
	
	\PYG{n}{TWCR} \PYG{o}{\PYGZam{}=} \PYG{o}{\PYGZti{}}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{n}{TWSTO}\PYG{p}{);}
	\PYG{n}{TWCR} \PYG{o}{\PYGZam{}=} \PYG{o}{\PYGZti{}}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{n}{TWEN}\PYG{p}{);}

	\PYG{k}{return} \PYG{l+m+mi}{0}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}
\PYG{k+kt}{uint8\PYGZus{}t} \PYG{n+nf}{I2C\PYGZus{}Master\PYGZus{}Mode}\PYG{p}{(}\PYG{k+kt}{uint8\PYGZus{}t} \PYG{n}{slave\PYGZus{}address}\PYG{p}{,} \PYG{k+kt}{uint8\PYGZus{}t} \PYG{n}{transmiter0\PYGZus{}receiver1}\PYG{p}{)}
\PYG{p}{\PYGZob{}}
	\PYG{c+c1}{// Entering MASTER mode}
	\PYG{c+c1}{// Writing SLA+W into TWDR for transmiiter and SLA+R for receiver}
	\PYG{c+c1}{// slave address must be MSB first}
	\PYG{c+c1}{// slave address is left shifted by 1 in order to accompany the R/W bit}
	\PYG{n}{TWDR} \PYG{o}{=} \PYG{p}{(}\PYG{n}{slave\PYGZus{}address}\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{l+m+mi}{1}\PYG{p}{)} \PYG{o}{|} \PYG{n}{transmiter0\PYGZus{}receiver1}\PYG{p}{;}
	\PYG{c+c1}{// Do the transaction}
	\PYG{n}{TWCR} \PYG{o}{|=} \PYG{p}{(}\PYG{l+m+mi}{1}\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{n}{TWINT}\PYG{p}{);}
	\PYG{k}{while}\PYG{p}{((}\PYG{n}{TWCR} \PYG{o}{\PYGZam{}} \PYG{p}{(}\PYG{l+m+mi}{1}\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{n}{TWINT} \PYG{p}{))} \PYG{o}{==} \PYG{l+m+mh}{0x00}\PYG{p}{);}
	\PYG{n}{status} \PYG{o}{=} \PYG{n}{I2C\PYGZus{}Master\PYGZus{}Status}\PYG{p}{();}
	\PYG{c+c1}{// For transmitter the staus would have to be 0x18 and for receiver 0x40}
	\PYG{k+kt}{uint8\PYGZus{}t} \PYG{n}{status\PYGZus{}val\PYGZus{}checker} \PYG{o}{=} \PYG{p}{(}\PYG{n}{transmiter0\PYGZus{}receiver1}\PYG{o}{==}\PYG{l+m+mi}{0}\PYG{p}{)} \PYG{o}{?} \PYG{l+m+mh}{0x18} \PYG{o}{:} \PYG{l+m+mh}{0x40}\PYG{p}{;}
	\PYG{k}{if}\PYG{p}{(}\PYG{n}{status} \PYG{o}{==} \PYG{n}{status\PYGZus{}val\PYGZus{}checker}\PYG{p}{)}
	\PYG{p}{\PYGZob{}}
		\PYG{c+c1}{// no error occured}
		\PYG{k}{return} \PYG{l+m+mi}{0}\PYG{p}{;}
	\PYG{p}{\PYGZcb{}}
	\PYG{k}{else}
	\PYG{p}{\PYGZob{}}
		\PYG{c+c1}{// error occured}
		\PYG{k}{return} \PYG{l+m+mi}{0}\PYG{p}{;}
	\PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{}}
\PYG{k+kt}{uint8\PYGZus{}t} \PYG{n+nf}{I2C\PYGZus{}Master\PYGZus{}DataTransmitByte}\PYG{p}{(}\PYG{k+kt}{uint8\PYGZus{}t} \PYG{n}{data\PYGZus{}}\PYG{p}{)}
\PYG{p}{\PYGZob{}}
	\PYG{c+c1}{// Data packet is transmitted}
	\PYG{c+c1}{// Writing data intor TWDR}
	\PYG{n}{TWDR} \PYG{o}{=} \PYG{n}{data\PYGZus{}}\PYG{p}{;}
	\PYG{c+c1}{// Do the transaction}
	\PYG{n}{TWCR} \PYG{o}{|=} \PYG{p}{(}\PYG{l+m+mi}{1}\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{n}{TWINT}\PYG{p}{);}
	\PYG{k}{while}\PYG{p}{((}\PYG{n}{TWCR} \PYG{o}{\PYGZam{}} \PYG{p}{(}\PYG{l+m+mi}{1}\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{n}{TWINT} \PYG{p}{))} \PYG{o}{==} \PYG{l+m+mh}{0x00}\PYG{p}{);}
	\PYG{n}{status} \PYG{o}{=} \PYG{n}{I2C\PYGZus{}Master\PYGZus{}Status}\PYG{p}{();}
	\PYG{k}{if}\PYG{p}{(}\PYG{n}{status} \PYG{o}{==} \PYG{l+m+mh}{0x28}\PYG{p}{)}
	\PYG{p}{\PYGZob{}}
		\PYG{c+c1}{// ACK received and still data can be sent}
		\PYG{k}{return} \PYG{l+m+mi}{0}\PYG{p}{;}
	\PYG{p}{\PYGZcb{}}
	\PYG{k}{else} \PYG{k}{if}\PYG{p}{(}\PYG{n}{status} \PYG{o}{==} \PYG{l+m+mh}{0x30}\PYG{p}{)}
	\PYG{p}{\PYGZob{}}
		\PYG{c+c1}{// NACK received and this is the last data so stop}
		\PYG{k}{return} \PYG{l+m+mi}{1}\PYG{p}{;}
	\PYG{p}{\PYGZcb{}}
	\PYG{k}{else}
	\PYG{p}{\PYGZob{}}
		\PYG{c+c1}{// error occured}
		\PYG{k}{return} \PYG{l+m+mi}{2}\PYG{p}{;}
	\PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{}}
\PYG{k+kt}{void} \PYG{n+nf}{I2C\PYGZus{}Master\PYGZus{}DataTransmitString}\PYG{p}{(}\PYG{k+kt}{uint8\PYGZus{}t} \PYG{o}{*}\PYG{n}{cdata}\PYG{p}{)}
\PYG{p}{\PYGZob{}}
	\PYG{k}{while}\PYG{p}{(}\PYG{o}{*}\PYG{n}{cdata} \PYG{o}{!=} \PYG{l+s+sc}{\PYGZsq{}\PYGZbs{}0\PYGZsq{}}\PYG{p}{)}
	\PYG{p}{\PYGZob{}}
		\PYG{n}{status} \PYG{o}{=} \PYG{n}{I2C\PYGZus{}Master\PYGZus{}DataTransmitByte}\PYG{p}{(}\PYG{o}{*}\PYG{n}{cdata}\PYG{o}{++}\PYG{p}{)} \PYG{p}{;}
		\PYG{k}{if}\PYG{p}{(}\PYG{n}{status} \PYG{o}{==} \PYG{l+m+mi}{0}\PYG{p}{)}
		\PYG{p}{\PYGZob{}}
			\PYG{c+c1}{// ACK received and still data can be sent}
			\PYG{c+c1}{// continue}
		\PYG{p}{\PYGZcb{}}
		\PYG{k}{else} \PYG{k}{if}\PYG{p}{(}\PYG{n}{status} \PYG{o}{==} \PYG{l+m+mi}{1}\PYG{p}{)}
		\PYG{p}{\PYGZob{}}
			\PYG{c+c1}{// NACK received and this is the last data so stop}
			\PYG{k}{return}\PYG{p}{;}
		\PYG{p}{\PYGZcb{}}
		\PYG{k}{else}
		\PYG{p}{\PYGZob{}}
			\PYG{c+c1}{// error occured}
			\PYG{k}{return}\PYG{p}{;}
		\PYG{p}{\PYGZcb{}}
	\PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{uint8\PYGZus{}t} \PYG{n+nf}{I2C\PYGZus{}Master\PYGZus{}DataReceiveByte}\PYG{p}{()}
\PYG{p}{\PYGZob{}}
	\PYG{k+kt}{uint8\PYGZus{}t} \PYG{n}{value\PYGZus{}} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}

	\PYG{c+c1}{// Data packet is recieved}
	\PYG{n}{TWCR} \PYG{o}{|=} \PYG{p}{(}\PYG{l+m+mi}{1}\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{n}{TWINT}\PYG{p}{);}
	\PYG{c+c1}{// Do the transaction}
	\PYG{k}{while}\PYG{p}{((}\PYG{n}{TWCR} \PYG{o}{\PYGZam{}} \PYG{p}{(}\PYG{l+m+mi}{1}\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{n}{TWINT} \PYG{p}{))} \PYG{o}{==} \PYG{l+m+mh}{0x00}\PYG{p}{)}
	\PYG{p}{\PYGZob{}}
		\PYG{n}{value\PYGZus{}} \PYG{o}{=} \PYG{n}{TWDR}\PYG{p}{;}
	\PYG{p}{\PYGZcb{}}
	
	 	
	\PYG{n}{status} \PYG{o}{=} \PYG{n}{I2C\PYGZus{}Master\PYGZus{}Status}\PYG{p}{();}
	\PYG{k}{if}\PYG{p}{(}\PYG{n}{status} \PYG{o}{==} \PYG{l+m+mh}{0x58}\PYG{p}{)}
	\PYG{p}{\PYGZob{}}
		\PYG{c+c1}{// no error occured}
		\PYG{k}{return} \PYG{n}{value\PYGZus{}}\PYG{p}{;}
	\PYG{p}{\PYGZcb{}}
	\PYG{k}{else}
	\PYG{p}{\PYGZob{}}
		\PYG{c+c1}{// error occured}
		\PYG{k}{return} \PYG{l+m+mi}{1}\PYG{p}{;}
	\PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{}}
\PYG{k+kt}{void} \PYG{n+nf}{I2C\PYGZus{}Master\PYGZus{}DataReceiveString}\PYG{p}{(}\PYG{k+kt}{uint8\PYGZus{}t} \PYG{o}{*}\PYG{n}{recData}\PYG{p}{,}\PYG{k+kt}{uint8\PYGZus{}t} \PYG{n}{NUMBYTE}\PYG{p}{)}
\PYG{p}{\PYGZob{}}
	\PYG{k+kt}{uint8\PYGZus{}t} \PYG{n}{i}\PYG{o}{=}\PYG{l+m+mi}{0}\PYG{p}{;}
	\PYG{n}{recData}\PYG{p}{[}\PYG{n}{NUMBYTE}\PYG{p}{]} \PYG{o}{=} \PYG{l+s+sc}{\PYGZsq{}\PYGZbs{}0\PYGZsq{}}\PYG{p}{;}
	\PYG{k}{while}\PYG{p}{(}\PYG{n}{i} \PYG{o}{\PYGZlt{}} \PYG{n}{NUMBYTE}\PYG{p}{)}
	\PYG{p}{\PYGZob{}}
		\PYG{c+c1}{// Enabling the Acknowledment bit for replying positive ACK}
		\PYG{n}{TWCR} \PYG{o}{|=} \PYG{p}{(}\PYG{l+m+mi}{1}\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{n}{TWEA}\PYG{p}{);}
		\PYG{k}{if}\PYG{p}{(}\PYG{n}{i}\PYG{o}{==}\PYG{p}{(}\PYG{n}{NUMBYTE}\PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{p}{))}
		\PYG{p}{\PYGZob{}}
			\PYG{c+c1}{// disbale the Acknowledment bit for replying Negatice ACK for last byte}
			\PYG{n}{TWCR} \PYG{o}{\PYGZam{}=} \PYG{o}{\PYGZti{}}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{n}{TWEA}\PYG{p}{);}
		\PYG{p}{\PYGZcb{}}
		\PYG{n}{status} \PYG{o}{=} \PYG{n}{I2C\PYGZus{}Master\PYGZus{}DataReceiveByte}\PYG{p}{();}
		\PYG{k}{if}\PYG{p}{(}\PYG{n}{status}\PYG{o}{==}\PYG{l+m+mh}{0xFF}\PYG{p}{)}
			\PYG{k}{return}\PYG{p}{;}
		\PYG{k}{else}		
			\PYG{n}{recData}\PYG{p}{[}\PYG{n}{i}\PYG{p}{]} \PYG{o}{=} \PYG{n}{status}\PYG{p}{;}
		\PYG{n}{i}\PYG{o}{++}\PYG{p}{;}
	\PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{}}
\end{Verbatim}
