\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+cm}{/* TCNT1 starts from 0X0000 goes upto 0XFFFF and restarts */}
\PYG{c+cm}{/* No possible use case as it just goes upto 0xFFFF and restarts */}
\PYG{c+c1}{// MOde of operation to Normal Mode \PYGZhy{}\PYGZhy{} WGM1[3:0] === 0000}
\PYG{c+c1}{// WGM1[3](bit4) from TCCR1B, WGM1[2](bit3) from TCCR1B, WGM1[1](bit1)  from TCC1RA, WGM1[0](bit0)  from TCCR1A	}
\PYG{n}{TCCR1A} \PYG{o}{=} \PYG{n}{TCCR1A} \PYG{o}{\PYGZam{}} \PYG{o}{\PYGZti{}}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{n}{WGM10}\PYG{p}{);}
\PYG{n}{TCCR1A} \PYG{o}{=} \PYG{n}{TCCR1A} \PYG{o}{\PYGZam{}} \PYG{o}{\PYGZti{}}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{n}{WGM11}\PYG{p}{);}
\PYG{n}{TCCR1B} \PYG{o}{=} \PYG{n}{TCCR1B} \PYG{o}{\PYGZam{}} \PYG{o}{\PYGZti{}}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{n}{WGM12}\PYG{p}{);}
\PYG{n}{TCCR1B} \PYG{o}{=} \PYG{n}{TCCR1B} \PYG{o}{\PYGZam{}} \PYG{o}{\PYGZti{}}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{n}{WGM13}\PYG{p}{);}

\PYG{c+cm}{/* What to do when timer reaches the MAX(0xFFFF) value */}
\PYG{c+c1}{// nothing should be done on OC1A for delay}
\PYG{c+c1}{// nothing  \PYGZhy{}\PYGZhy{} COM1A[1:0] === 00}
\PYG{c+c1}{// COM1A[1](bit7) from TCCR1A, COM1A[0](bit6) from TCCR1A}
\PYG{n}{TCCR1A} \PYG{o}{=} \PYG{n}{TCCR1A} \PYG{o}{\PYGZam{}} \PYG{o}{\PYGZti{}}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{n}{COM1A1}\PYG{p}{);}
\PYG{n}{TCCR1A} \PYG{o}{=} \PYG{n}{TCCR1A} \PYG{o}{\PYGZam{}} \PYG{o}{\PYGZti{}}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{n}{COM1A0}\PYG{p}{);}

\PYG{c+cm}{/* The delay possible = 0xffff / (F\PYGZus{}CPU/prescalar) */}
\PYG{c+c1}{// lowest delay = 0xffff / (16000000 / 1) = 4.096ms}
\PYG{c+c1}{// when prescalar == 8 \PYGZhy{}\PYGZhy{}\PYGZgt{} delay = 0xffff / (16000000 / 8) = 32.768ms}
\PYG{c+c1}{// when prescalar == 64 \PYGZhy{}\PYGZhy{}\PYGZgt{} delay = 0xffff / (16000000 / 64) = 262.144ms}
\PYG{c+c1}{// when prescalar == 256 \PYGZhy{}\PYGZhy{}\PYGZgt{} delay = 0xffff / (16000000 / 256) = 1.048576s}
\PYG{c+c1}{// highest delay possible = 0xffff / (16000000 / 1024) = 4.194304s}

\PYG{c+c1}{// start timer by setting the clock prescalar}
\PYG{c+c1}{// divede by 64 from I/O clock}
\PYG{c+c1}{// divede by 64\PYGZhy{}\PYGZhy{} CS1[2:0] === 101}
\PYG{c+c1}{// CS1[2](bit2) from TCCR1B,CS1[1](bit1) from TCCR1B,CS1[0](bit0) from TCCR1B}
\PYG{n}{TCCR1B} \PYG{o}{=} \PYG{n}{TCCR1B} \PYG{o}{|} \PYG{p}{(}\PYG{l+m+mi}{1}\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{n}{CS10}\PYG{p}{);}
\PYG{n}{TCCR1B} \PYG{o}{=} \PYG{n}{TCCR1B} \PYG{o}{|} \PYG{p}{(}\PYG{l+m+mi}{1}\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{n}{CS11}\PYG{p}{);}
\PYG{n}{TCCR1B} \PYG{o}{=} \PYG{n}{TCCR1B} \PYG{o}{\PYGZam{}} \PYG{o}{\PYGZti{}}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{n}{CS12}\PYG{p}{);}


\PYG{c+c1}{// actual delaying \PYGZhy{} wait until delay happens}
\PYG{k}{while}\PYG{p}{((}\PYG{n}{TIFR1} \PYG{o}{\PYGZam{}} \PYG{l+m+mh}{0x01}\PYG{p}{)} \PYG{o}{==} \PYG{l+m+mh}{0x00}\PYG{p}{);} \PYG{c+c1}{// checking overflow flag when overflow happns}
\PYG{c+c1}{// clearing the overflag so that we can further utilize}
\PYG{n}{TIFR1} \PYG{o}{=} \PYG{n}{TIFR1} \PYG{o}{|} \PYG{l+m+mh}{0x01}\PYG{p}{;}
\end{Verbatim}
