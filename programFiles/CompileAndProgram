#!/bin/bash
set -e
set -u
set -o pipefail

# for reference
# https://stackoverflow.com/questions/11279423/bash-getopts-with-multiple-and-mandatory-options
# https://linuxconfig.org/how-to-use-getopts-to-parse-a-script-options
inputFileGiven=false
portGiven=false

export avrProcessor="atmega328p"
export avrProgrammer="stk500"
export programmerBaud="115200"
export headerLoc="./HeaderFiles/."


while getopts 'i:p:c:P:I:b:' OPTION; do
  case "$OPTION" in
    i)
      avrFileName="$OPTARG"
      inputFileGiven=true
      # echo "file name is $avrFileName"
      ;;

    p)
      avrProcessor="$OPTARG"
      # echo "processor is $avrProcessor"
      ;;
    I)
      headerLoc="$OPTARG"
      # echo "The value provided is $OPTARG"
      ;;
    c)
      avrProgrammer="$OPTARG"
      # echo "The value provided is $OPTARG"
      ;;
    b)
      programmerBaud="$OPTARG"
      # echo "The value provided is $OPTARG"
      ;;
    P)
      devicePort="$OPTARG"
      portGiven=true
      echo "Device port is $OPTARG"
      ;;
    ?)
      echo "Usage: $(basename $0) -i fileName(without extention) [OPTION]"
      echo "Options:"
      echo "  -p  Processor(default:atmega328p)"
      echo "  -I Header Location(default:./HeaderFiles)"
      echo "  -c Programmer(default:stk500)"
      echo "  -b baudrate(default:115200)"
      echo "  -P Device Port(eg:/dev/ttyUSB0)]       Giving this parameter programs the device"
      exit 1
      ;;
  esac
done

shift $((OPTIND - 1))

if ((OPTIND == 1))
then
    echo "Usage: $(basename $0) -i fileName(without extention) [OPTION]"
    echo "Options:"
    echo "  -p  Processor(default:atmega328p)"
    echo "  -I Header Location(default:./HeaderFiles)"
    echo "  -c Programmer(default:stk500)"
    echo "  -b baudrate(default:115200)"
    echo "  -P Device Port(eg:/dev/ttyUSB0)]       Giving this parameter programs the device"
    exit 1
fi


if ! $inputFileGiven
then
    echo "$(basename $0) [-i fileName(without extention)] is Mandatory" >&2
    exit 1
fi


#Cleaning
#rm -r *.o
#rm -r *.elf
#rm -r *.hex

# Compiling 
avr-gcc -Os -Wall -g -mmcu=$avrProcessor -c $avrFileName.c -o $avrFileName.o -I $headerLoc
avr-gcc -Os -Wall -g -mmcu=$avrProcessor $avrFileName.o -o $avrFileName.elf
avr-objcopy -j .text -j .data -O ihex $avrFileName.elf $avrFileName.hex

#Cleaning
rm -r *.o
rm -r *.elf
#rm -r *.hex


# Programming

if $portGiven
then
  avrdude -p $avrProcessor -b $programmerBaud -c $avrProgrammer -P $devicePort -v -U flash:w:$avrFileName.hex:i 
fi
